package net.sf.gaia.persistence.schema;

import java.util.HashSet;
import java.util.Set;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * 
 * @author daniel.joppi
 *
 */
public class MySQLSafeNamingStrategy extends SafeNamingStrategy {

	@SuppressWarnings("unused")
	private static final Log logger = LogFactory.getLog(MySQLSafeNamingStrategy.class);
	
	public static final MySQLSafeNamingStrategy INSTANCE = new MySQLSafeNamingStrategy();

	private static final Set<String> keywordSet = new HashSet<String>();
	static
	{
		keywordSet.add("add");
		keywordSet.add("all");
		keywordSet.add("alter");
		keywordSet.add("analyze");
		keywordSet.add("and");
		keywordSet.add("as");
		keywordSet.add("asc");
		keywordSet.add("asensitive");
		keywordSet.add("before");
		keywordSet.add("between");
		keywordSet.add("bigint");
		keywordSet.add("binary");
		keywordSet.add("blob");
		keywordSet.add("both");
		keywordSet.add("by");
		keywordSet.add("call");
		keywordSet.add("cascade");
		keywordSet.add("case");
		keywordSet.add("change");
		keywordSet.add("char");
		keywordSet.add("character");
		keywordSet.add("check");
		keywordSet.add("collate");
		keywordSet.add("column");
		keywordSet.add("condition");
		keywordSet.add("connection");
		keywordSet.add("constraint");
		keywordSet.add("continue");
		keywordSet.add("convert");
		keywordSet.add("create");
		keywordSet.add("cross");
		keywordSet.add("current_date");
		keywordSet.add("current_time");
		keywordSet.add("current_timestamp");
		keywordSet.add("current_user");
		keywordSet.add("cursor");
		keywordSet.add("database");
		keywordSet.add("databases");
		keywordSet.add("day_hour");
		keywordSet.add("day_microsecond");
		keywordSet.add("day_minute");
		keywordSet.add("day_second");
		keywordSet.add("dec");
		keywordSet.add("decimal");
		keywordSet.add("declare");
		keywordSet.add("default");
		keywordSet.add("delayed");
		keywordSet.add("delete");
		keywordSet.add("desc");
		keywordSet.add("describe");
		keywordSet.add("deterministic");
		keywordSet.add("distinct");
		keywordSet.add("distinctrow");
		keywordSet.add("div");
		keywordSet.add("double");
		keywordSet.add("drop");
		keywordSet.add("dual");
		keywordSet.add("each");
		keywordSet.add("else");
		keywordSet.add("elseif");
		keywordSet.add("enclosed");
		keywordSet.add("escaped");
		keywordSet.add("exists");
		keywordSet.add("exit");
		keywordSet.add("explain");
		keywordSet.add("false");
		keywordSet.add("fetch");
		keywordSet.add("float");
		keywordSet.add("for");
		keywordSet.add("force");
		keywordSet.add("foreign");
		keywordSet.add("from");
		keywordSet.add("fulltext");
		keywordSet.add("goto");
		keywordSet.add("grant");
		keywordSet.add("group");
		keywordSet.add("having");
		keywordSet.add("high_priority");
		keywordSet.add("hour_microsecond");
		keywordSet.add("hour_minute");
		keywordSet.add("hour_second");
		keywordSet.add("if");
		keywordSet.add("ignore");
		keywordSet.add("in");
		keywordSet.add("index");
		keywordSet.add("infile");
		keywordSet.add("inner");
		keywordSet.add("inout");
		keywordSet.add("insensitive");
		keywordSet.add("insert");
		keywordSet.add("int");
		keywordSet.add("integer");
		keywordSet.add("interval");
		keywordSet.add("into");
		keywordSet.add("is");
		keywordSet.add("iterate");
		keywordSet.add("join");
		keywordSet.add("key");
		keywordSet.add("keys");
		keywordSet.add("kill");
		keywordSet.add("leading");
		keywordSet.add("leave");
		keywordSet.add("left");
		keywordSet.add("like");
		keywordSet.add("limit");
		keywordSet.add("lines");
		keywordSet.add("load");
		keywordSet.add("localtime");
		keywordSet.add("localtimestamp");
		keywordSet.add("lock");
		keywordSet.add("long");
		keywordSet.add("longblob");
		keywordSet.add("longtext");
		keywordSet.add("loop");
		keywordSet.add("low_priority");
		keywordSet.add("match");
		keywordSet.add("mediumblob");
		keywordSet.add("mediumint");
		keywordSet.add("mediumtext");
		keywordSet.add("middleint");
		keywordSet.add("minute_microsecond");
		keywordSet.add("minute_second");
		keywordSet.add("mod");
		keywordSet.add("modifies");
		keywordSet.add("natural");
		keywordSet.add("not");
		keywordSet.add("no_write_to_binlog");
		keywordSet.add("null");
		keywordSet.add("numeric");
		keywordSet.add("on");
		keywordSet.add("optimize");
		keywordSet.add("option");
		keywordSet.add("optionally");
		keywordSet.add("or");
		keywordSet.add("order");
		keywordSet.add("out");
		keywordSet.add("outer");
		keywordSet.add("outfile");
		keywordSet.add("precision");
		keywordSet.add("primary");
		keywordSet.add("procedure");
		keywordSet.add("purge");
		keywordSet.add("read");
		keywordSet.add("reads");
		keywordSet.add("real");
		keywordSet.add("references");
		keywordSet.add("regexp");
		keywordSet.add("rename");
		keywordSet.add("repeat");
		keywordSet.add("replace");
		keywordSet.add("require");
		keywordSet.add("restrict");
		keywordSet.add("return");
		keywordSet.add("revoke");
		keywordSet.add("right");
		keywordSet.add("rlike");
		keywordSet.add("schema");
		keywordSet.add("schemas");
		keywordSet.add("second_microsecond");
		keywordSet.add("select");
		keywordSet.add("sensitive");
		keywordSet.add("separator");
		keywordSet.add("set");
		keywordSet.add("show");
		keywordSet.add("smallint");
		keywordSet.add("soname");
		keywordSet.add("spatia");
		keywordSet.add("specific");
		keywordSet.add("sql");
		keywordSet.add("sqlexception");
		keywordSet.add("sqlstate");
		keywordSet.add("sqlwarning");
		keywordSet.add("sql_big_result");
		keywordSet.add("sql_calc_found_rows");
		keywordSet.add("sql_small_result");
		keywordSet.add("ssl");
		keywordSet.add("starting");
		keywordSet.add("straight_join");
		keywordSet.add("table");
		keywordSet.add("terminated");
		keywordSet.add("then");
		keywordSet.add("tinyblob");
		keywordSet.add("tinyint");
		keywordSet.add("tinytext");
		keywordSet.add("to");
		keywordSet.add("trailing");
		keywordSet.add("trigger");
		keywordSet.add("true");
		keywordSet.add("undo");
		keywordSet.add("union");
		keywordSet.add("unique");
		keywordSet.add("unlock");
		keywordSet.add("unsigned");
		keywordSet.add("update");
		keywordSet.add("usage");
		keywordSet.add("use");
		keywordSet.add("using");
		keywordSet.add("utc_date");
		keywordSet.add("utc_time");
		keywordSet.add("utc_timestamp");
		keywordSet.add("values");
		keywordSet.add("varbinary");
		keywordSet.add("varchar");
		keywordSet.add("varcharacter");
		keywordSet.add("varying");
		keywordSet.add("when");
		keywordSet.add("where");
		keywordSet.add("while");
		keywordSet.add("with");
		keywordSet.add("write");
		keywordSet.add("xor");
		keywordSet.add("year_month");
		keywordSet.add("zerofill");
	}

	@Override
	protected Set<String> getKeywordSet()
	{
		return keywordSet;
	}
}